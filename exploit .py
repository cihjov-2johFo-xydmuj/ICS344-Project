
# Import the required libraries
import nmap
import requests

# Initialize the nmap object
nm = nmap.PortScanner()

# Store the Target IP address by taking input from the user
target = input("Enter the target IP adress: ")  

# Run nmap scan on the target to check for HTTP service
print("Start searching for open ports")
nm.scan(target, '80')  # It is possible to set any number of ports
runningPort = [] # a list that will save the open ports

# Check if the host is up and if HTTP ports are open
if target in nm.all_hosts():
    # Extract information about the HTTP ports
    for proto in nm[target].all_protocols():
        print(f"Protocol: {proto}")
        lport = nm[target][proto].keys()
        for port in lport:
            if port in [80, 3000]:  # Common HTTP ports
                print(f"HTTP port found: {port}")
                runningPort.append(port)
else:
    print(f"Target {target} not found or not reachable.")



# Function to check a URL and return its HTTP status code
def check_url(url):
    try:
        response = requests.get(url)
        return response.status_code
    except requests.RequestException as e:
        print(f"Error with request to {url}: {e}")
        return None


# Function to run the directory brute force scan
def dirb_scan(target, wordlist_file, info):
    with open(wordlist_file, 'r') as file: # this file contain a number of common words that can fit a path 
        wordlist = file.readlines()

    for word in wordlist:
        word = word.strip()  # Remove any leading whitespace
        if word:  # Skip empty lines
            # Construct the URL to check
            full_url = f"http://{target}/{word}"
            status_code = check_url(full_url)

            # Print the result based on the status code
            if status_code == 200:
                print(f"[+] Found: {full_url} [200 OK]")
                info["openURL"] = info["openURL"] + 1
                info["successfully"].append(full_url)
            elif status_code == 403:
                print(f"[-] Forbidden: {full_url} [Forbidden]")
                info["closeURL"] = info["closeURL"] + 1
            elif status_code == 500:
                print(f"[-] Not Found: {full_url} [Not Found]")
                info["closeURL"] = info["closeURL"] + 1
            else:
                print(f"[?] Status Code {status_code}: {full_url}")
                info["closeURL"] = info["closeURL"] + 1

info = {"openURL":0,"closeURL":0, "successfully":[]}
wordlist_path = "word_list.txt"  # Path to wordlist file
dirb_scan(target, wordlist_path, info)

print("The number of successfully opened URLs are: " + str(info["openURL"]))
print(info["successfully"])
print(" and the number of failed are: "+ str(info["closeURL"]))